/* tslint: disable */
// @ts-nocheck


const { writeFile, existsSync, mkdirSync } = require('fs');
const { argv } = require('yargs');

const environment = argv.environment;

console.log('envv', environment);
// require('dotenv').config();
require('dotenv').config({ path: `.env.${environment}` })




function writeFileUsingFS(targetPath, environmentFileContent) {
  writeFile(targetPath, environmentFileContent, function (err) {
    if (err) {
      console.log(err);
    }
    if (environmentFileContent !== '') {
      console.log(`wrote ${JSON.stringify(environmentFileContent)} to ${targetPath}`);
    }
  });
}


// Providing path to the `environments` directory
const envDirectory = './src/environments';

// creates the `environments` directory if it does not exist
if (!existsSync(envDirectory)) {
  mkdirSync(envDirectory);
}


const environmentFileEmpty = `
  // This file was autogenerated by dynamically running setEnv.ts and using dotenv for managing API key secrecy
  export default {
  };
`;


//creates the `environment.prod.ts` and `environment.ts` file if it does not exist
writeFileUsingFS('./src/environments/environment.prod.ts', environmentFileEmpty);
writeFileUsingFS('./src/environments/environment.dev.ts', environmentFileEmpty);


// Checks whether command line argument of `prod` was provided signifying production mode
const isProduction = environment === 'prod';

// choose the correct targetPath based on the environment chosen
const targetPath = isProduction
  ? './src/environments/environment.prod.ts'
  : './src/environments/environment.dev.ts';

//actual content to be compiled dynamically and pasted into respective environment files
const environmentFileContent = `
  // This file was autogenerated by dynamically running setEnv.ts and using dotenv for managing API key secrecy
  export default {
    production: ${isProduction},
    SERVER_PORT: '${process.env.SERVER_PORT}'  
  };
`;


console.log('environmentFileContent:',  environmentFileContent);

writeFileUsingFS(targetPath, environmentFileContent); // appending data into the target file


/* tslint: enable */